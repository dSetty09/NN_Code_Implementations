-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 0x0 kern times 0x0 img
Expected Result: 2.000000
Actual Result: 2.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 0x0 kern times 1x1 img
Expected Result: 0.000000
Actual Result: 0.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 0x0 kern times 1xn img
Expected Result: 0.000000
Actual Result: 0.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 0x0 kern times nx1 img
Expected Result: 0.000000
Actual Result: 0.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 0x0 kern times oddxodd img
Expected Result: 0.000000
Actual Result: 0.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 0x0 kern times evenxeve  img
Expected Result: 0.000000
Actual Result: 0.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 0x0 kern times rxc (3x4) img
Expected Result: 0.000000
Actual Result: 0.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 0x0 kern times rxc (4x3) img
Expected Result: 3.000000
Actual Result: 3.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1x1 kern times 1x1 img
Expected Result: 3.000000
Actual Result: 3.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1x1 kern times 1xn img
Expected Result: -1.000000
Actual Result: -1.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1x1 kern times nx1 img
Expected Result: -3.000000
Actual Result: -3.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1x1 kern times oddxodd img
Expected Result: -2.000000
Actual Result: -2.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1x1 kern times evenxeven img
Expected Result: -2.000000
Actual Result: -2.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1x1 kern times rxc (3x4) img
Expected Result: -2.000000
Actual Result: -2.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1x1 kern times rxc (4x3) img
Expected Result: -2.000000
Actual Result: -2.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1xn kern times 1xn img
Expected Result: 6.000000
Actual Result: 6.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1xn kern times oddxodd img
Expected Result: 6.000000
Actual Result: 6.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1xn kern times evenxeven img
Expected Result: 6.000000
Actual Result: 6.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1xn kern times rxc (3x4) img
Expected Result: 10.000000
Actual Result: 10.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | 1xn kern times rxc (4x3) img
Expected Result: 2.000000
Actual Result: 2.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | nx1 kern times nx1 img
Expected Result: 4.000000
Actual Result: 4.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | nx1 kern times oddxodd img
Expected Result: 6.000000
Actual Result: 6.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | nx1 kern times evenxeven img
Expected Result: 4.000000
Actual Result: 4.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | nx1 kern times rxc (3x4) img
Expected Result: 7.000000
Actual Result: 7.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | nx1 kern times rxc (4x3) img
Expected Result: 1.000000
Actual Result: 1.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | oddxodd kern times oddxodd img
Expected Result: 36.000000
Actual Result: 36.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | oddxodd kern times evenxeven img
Expected Result: 36.000000
Actual Result: 36.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | oddxodd kern times rxc (3x4) img
Expected Result: 38.000000
Actual Result: 38.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | oddxodd kern times rxc (4x3) img
Expected Result: -16.000000
Actual Result: -16.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | evenxeven kern times oddxodd img
Expected Result: 14.000000
Actual Result: 14.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | evenxeven kern times evenxeven img
Expected Result: 14.000000
Actual Result: 14.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | evenxeven kern times rxc (3x4) img
Expected Result: 16.000000
Actual Result: 16.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | evenxeven kern times rxc (4x3) img
Expected Result: 7.000000
Actual Result: 7.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | rxc (2x3) kern times oddxodd img
Expected Result: 16.000000
Actual Result: 16.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | rxc (2x3) kern times evenxeven img
Expected Result: 13.000000
Actual Result: 13.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | rxc (2x3) kern times rxc (3x4) img
Expected Result: 17.000000
Actual Result: 17.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | rxc (2x3) kern times rxc (4x3) img
Expected Result: 3.000000
Actual Result: 3.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | rxc (3x2) kern times oddxodd img
Expected Result: 2.000000
Actual Result: 2.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | rxc (3x2) kern times evenxeven img
Expected Result: 1.000000
Actual Result: 1.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | rxc (3x2) kern times rxc (3x4) img
Expected Result: 0.000000
Actual Result: 0.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
SUP_PRODUCT_SUMMATION TEST | rxc (3x2) kern times rxc (4x3) img
Expected Result: 4.000000
Actual Result: 4.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
IMG_WITH_PADDING TESTS (2D) | NXN IMAGE NO PADDING
           [ -2.000000,  1.000000,  -1.000000,  2.000000]
           [ 0.000000,  -3.000000,  1.000000,  4.000000]
Expected = [ 0.000000,  -4.000000,  2.000000,  1.000000]
           [ 3.000000,  2.000000,  -1.000000,  1.000000]

         [ -2.000000,  1.000000,  -1.000000,  2.000000]
         [ 0.000000,  -3.000000,  1.000000,  4.000000]
Actual = [ 0.000000,  -4.000000,  2.000000,  1.000000]
         [ 3.000000,  2.000000,  -1.000000,  1.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
IMG_WITH_PADDING TESTS (2D) | RXC IMAGE NO PADDING
           [ -2.000000,  1.000000,  -1.000000,  2.000000]
Expected = [ 0.000000,  -3.000000,  1.000000,  4.000000]
           [ 0.000000,  -4.000000,  2.000000,  1.000000]

         [ -2.000000,  1.000000,  -1.000000,  2.000000]
Actual = [ 0.000000,  -3.000000,  1.000000,  4.000000]
         [ 0.000000,  -4.000000,  2.000000,  1.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
IMG_WITH_PADDING TESTS (2D) | NXN IMAGE SAME ROW COL PADDING
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  -2.000000,  1.000000,  -1.000000,  2.000000,  0.000000]
           [ 0.000000,  0.000000,  -3.000000,  1.000000,  4.000000,  0.000000]
Expected = [ 0.000000,  0.000000,  -4.000000,  2.000000,  1.000000,  0.000000]
           [ 0.000000,  3.000000,  2.000000,  -1.000000,  1.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]

         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  -2.000000,  1.000000,  -1.000000,  2.000000,  0.000000]
         [ 0.000000,  0.000000,  -3.000000,  1.000000,  4.000000,  0.000000]
Actual = [ 0.000000,  0.000000,  -4.000000,  2.000000,  1.000000,  0.000000]
         [ 0.000000,  3.000000,  2.000000,  -1.000000,  1.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
IMG_WITH_PADDING TESTS (2D) | RXC IMAGE SAME ROW COL PADDING
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  -2.000000,  1.000000,  -1.000000,  2.000000,  0.000000]
Expected = [ 0.000000,  0.000000,  -3.000000,  1.000000,  4.000000,  0.000000]
           [ 0.000000,  0.000000,  -4.000000,  2.000000,  1.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]

         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  -2.000000,  1.000000,  -1.000000,  2.000000,  0.000000]
Actual = [ 0.000000,  0.000000,  -3.000000,  1.000000,  4.000000,  0.000000]
         [ 0.000000,  0.000000,  -4.000000,  2.000000,  1.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
IMG_WITH_PADDING TESTS (2D) | NXN IMAGE ARBITRARY PADDING
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  -2.000000,  1.000000,  -1.000000,  2.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  -3.000000,  1.000000,  4.000000,  0.000000,  0.000000,  0.000000]
Expected = [ 0.000000,  0.000000,  0.000000,  0.000000,  -4.000000,  2.000000,  1.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  3.000000,  2.000000,  -1.000000,  1.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]

         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  -2.000000,  1.000000,  -1.000000,  2.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  -3.000000,  1.000000,  4.000000,  0.000000,  0.000000,  0.000000]
Actual = [ 0.000000,  0.000000,  0.000000,  0.000000,  -4.000000,  2.000000,  1.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  3.000000,  2.000000,  -1.000000,  1.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
IMG_WITH_PADDING TESTS (2D) | RXC IMAGE ARBITRARY PADDING
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  -2.000000,  1.000000,  -1.000000,  2.000000,  0.000000,  0.000000,  0.000000]
Expected = [ 0.000000,  0.000000,  0.000000,  0.000000,  -3.000000,  1.000000,  4.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  -4.000000,  2.000000,  1.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
           [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]

         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  -2.000000,  1.000000,  -1.000000,  2.000000,  0.000000,  0.000000,  0.000000]
Actual = [ 0.000000,  0.000000,  0.000000,  0.000000,  -3.000000,  1.000000,  4.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  -4.000000,  2.000000,  1.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
         [ 0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000,  0.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE AND IMG DIMEN SIZE ARE 1
Expected Result: 1.000000
Actual Result: 1.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE AND IMG DIMEN SIZE ARE 1
Expected Result: 1.000000
Actual Result: 1.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS 1 WHILE IMG DIMEN SIZE IS GREATER THAN 1 (NO PADDING, STRIDE OF 1)
Expected Result: 5.000000
Actual Result: 5.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS 1 WHILE IMG DIMEN SIZE IS GREATER THAN 1 (NO PADDING, REASONABLE STRIDE GREATER THAN 1)
Expected Result: 3.000000
Actual Result: 3.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS 1 WHILE IMG DIMEN SIZE IS GREATER THAN 1 (NO PADDING, TOO LARGE STRIDE)
Expected Result: 1.000000
Actual Result: 1.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS 1 WHILE IMG DIMEN SIZE IS GREATER THAN 1 (PADDING, STRIDE OF 1)
Expected Result: 9.000000
Actual Result: 9.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS 1 WHILE IMG DIMEN SIZE IS GREATER THAN 1 (PADDING, REASONABLE STRIDE GREATER THAN 1)
Expected Result: 5.000000
Actual Result: 5.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS 1 WHILE IMG DIMEN SIZE IS GREATER THAN 1 (PADDING, TOO LARGE STRIDE)
Expected Result: 1.000000
Actual Result: 1.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS GREATER THAN 1 WHILE DIMEN SIZE IS GREATER THAN 1 (NO PADDING, STRIDE OF 1)
Expected Result: 4.000000
Actual Result: 4.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS GREATER THAN 1 WHILE DIMEN SIZE IS GREATER THAN 1 (NO PADDING, REASONABLE STRIDE GREATER THAN 1)
Expected Result: 2.000000
Actual Result: 2.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS GREATER THAN 1 WHILE DIMEN SIZE IS GREATER THAN 1 (NO PADDING, TOO LARGE STRIDE)
Expected Result: 1.000000
Actual Result: 1.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS GREATER THAN 1 WHILE DIMEN SIZE IS GREATER THAN 1 (PADDING, STRIDE OF 1)
Expected Result: 8.000000
Actual Result: 8.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS GREATER THAN 1 WHILE DIMEN SIZE IS GREATER THAN 1 (PADDING, REASONABLE STRIDE GREATER THAN 1)
Expected Result: 4.000000
Actual Result: 4.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CALC_OUTPUT_DIMEN_SIZE TESTS | KERNEL DIMEN SIZE IS GREATER THAN 1 WHILE DIMEN SIZE IS GREATER THAN 1 (PADDING, TOO LARGER STRIDE)
Expected Result: 1.000000
Actual Result: 1.000000
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CONVOLUTION TESTS | USING ODD BY ODD KERNEL ON EVEN BY EVEN IMAGE
           [ 36.000000,  -10.000000]
Expected = [ 0.000000,  4.000000]

         [ 36.000000,  -10.000000]
Actual = [ 0.000000,  4.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CONVOLUTION TESTS | USING EVEN BY EVEN KERNEL ON EVEN BY EVEN IMAGE
           [ 14.000000,  -6.000000,  -8.000000]
Expected = [ 9.000000,  1.000000,  -1.000000]
           [ -10.000000,  13.000000,  -6.000000]

         [ 14.000000,  -6.000000,  -8.000000]
Actual = [ 9.000000,  1.000000,  -1.000000]
         [ -10.000000,  13.000000,  -6.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CONVOLUTION TESTS | USING EVEN BY ODD KERNEL ON EVEN BY EVEN IMAGE
           [ 17.000000,  -3.000000]
Expected = [ 11.000000,  -1.000000]
           [ -12.000000,  14.000000]

         [ 17.000000,  -3.000000]
Actual = [ 11.000000,  -1.000000]
         [ -12.000000,  14.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CONVOLUTION TESTS | USING ODD BY EVEN KERNEL ON EVEN BY EVEN IMAGE
           [ -1.000000,  12.000000,  -4.000000]
Expected = [ -12.000000,  2.000000,  2.000000]

         [ -1.000000,  12.000000,  -4.000000]
Actual = [ -12.000000,  2.000000,  2.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CONVOLUTION TESTS | NO PADDING AND STRIDE 1
           [ 19.000000,  -1.000000]
Expected = [ 13.000000,  1.000000]

         [ 19.000000,  -1.000000]
Actual = [ 13.000000,  1.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CONVOLUTION TESTS | NO PADDING AND REASONABLE ROW STRIDE AND UNREASONABLE COLUMN STRIDE
           [ 2.000000]
Expected = [ -4.000000]

         [ 2.000000]
Actual = [ -4.000000]
Test passed.
-----------------------------------------------------
-----------------------------------------------------
CONVOLUTION TESTS | ARBITRARY PADDING AND ARBITRARY STRIDES
           [ 0.000000,  0.000000]
Expected = [ -2.000000,  -8.000000]
           [ 0.000000,  -3.000000]

         [ 0.000000,  0.000000]
Actual = [ -2.000000,  -8.000000]
         [ 0.000000,  -3.000000]
Test passed.
-----------------------------------------------------
