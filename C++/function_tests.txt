Linear Function Tests:
	> Test 0:
		- Mine: Linear(0) ==> 0
		- Actual: Linear(0) ==> 0
		- Linear function with 0 as argument evaluates to 0
	> Test 1:
		- Mine: Linear(-0.4) ==> -0.4
		- Actual: Linear(-0.4) ==> -0.4
		- Linear function with -0.4 as argument evaluates to -0.4
	> Test 2:
		- Mine: Linear(-16) ==> -16
		- Actual: Linear(-16) ==> -16
		- Linear function with -16 as argument evaluates to -16
	> Test 3:
		- Mine: Linear(0.7) ==> 0.7
		- Actual: Linear(0.7) ==> 0.7
		- Linear function with 0.7 as argument evaluates to 0.7
	> Test 4:
		- Mine: Linear(22) ==> 22
		- Actual: Linear(22) ==> 22
		- Linear function with 22 as argument evaluates to 22
	> Test 5:
		- Mine: Linear(-inf) ==> -inf
		- Actual: Linear(-inf) ==> -inf
		- Linear function with -inf as argument evaluates to -inf
	> Test 6:
		- Mine: Linear(inf) ==> inf
		- Actual: Linear(inf) ==> inf
		- Linear function with inf as argument evaluates to inf
Sigmoid Function Tests:
	> Test 0:
		- Mine: Sigmoid(0) ==> 0.5
		- Actual: Sigmoid(0) ==> 0.5
		- Sigmoid function with 0 as argument evaluates to 0.5
	> Test 1:
		- Mine: Sigmoid(-0.4) ==> 0.40131
		- Actual: Sigmoid(-0.4) ==> 0.40131
		- Sigmoid function with -0.4 as argument evaluates to 0.40131
	> Test 2:
		- Mine: Sigmoid(-16) ==> 0
		- Actual: Sigmoid(-16) ==> 0
		- Sigmoid function with -16 as argument evaluates to 0
	> Test 3:
		- Mine: Sigmoid(0.7) ==> 0.66819
		- Actual: Sigmoid(0.7) ==> 0.66819
		- Sigmoid function with 0.7 as argument evaluates to 0.66819
	> Test 4:
		- Mine: Sigmoid(22) ==> 1
		- Actual: Sigmoid(22) ==> 1
		- Sigmoid function with 22 as argument evaluates to 1
	> Test 5:
		- Mine: Sigmoid(-inf) ==> 0
		- Actual: Sigmoid(-inf) ==> 0
		- Sigmoid function with -inf as argument evaluates to 0
	> Test 6:
		- Mine: Sigmoid(inf) ==> 1
		- Actual: Sigmoid(inf) ==> 1
		- Sigmoid function with inf as argument evaluates to 1
Tanh Function Tests:
	> Test 0:
		- Mine: Tanh(0) ==> 0
		- Actual: Tanh(0) ==> 0
		- Tanh function with 0 as argument evaluates to 0
	> Test 1:
		- Mine: Tanh(-0.4) ==> -0.37995
		- Actual: Tanh(-0.4) ==> -0.37995
		- Tanh function with -0.4 as argument evaluates to -0.37995
	> Test 2:
		- Mine: Tanh(-16) ==> -1
		- Actual: Tanh(-16) ==> -1
		- Tanh function with -16 as argument evaluates to -1
	> Test 3:
		- Mine: Tanh(0.7) ==> 0.60437
		- Actual: Tanh(0.7) ==> 0.60437
		- Tanh function with 0.7 as argument evaluates to 0.60437
	> Test 4:
		- Mine: Tanh(22) ==> 1
		- Actual: Tanh(22) ==> 1
		- Tanh function with 22 as argument evaluates to 1
	> Test 5:
		- Mine: Tanh(-inf) ==> -1
		- Actual: Tanh(-inf) ==> -1
		- Tanh function with -inf as argument evaluates to -1
	> Test 6:
		- Mine: Tanh(inf) ==> 1
		- Actual: Tanh(inf) ==> 1
		- Tanh function with inf as argument evaluates to 1
Step Function Tests:
	> Test 0:
		- Mine: Step(0) ==> 0
		- Actual: Step(0) ==> 0
		- Step function with 0 as argument evaluates to 0
	> Test 1:
		- Mine: Step(-0.4) ==> 0
		- Actual: Step(-0.4) ==> 0
		- Step function with -0.4 as argument evaluates to 0
	> Test 2:
		- Mine: Step(-16) ==> 0
		- Actual: Step(-16) ==> 0
		- Step function with -16 as argument evaluates to 0
	> Test 3:
		- Mine: Step(0.7) ==> 1
		- Actual: Step(0.7) ==> 1
		- Step function with 0.7 as argument evaluates to 1
	> Test 4:
		- Mine: Step(22) ==> 1
		- Actual: Step(22) ==> 1
		- Step function with 22 as argument evaluates to 1
	> Test 5:
		- Mine: Step(-inf) ==> 0
		- Actual: Step(-inf) ==> 0
		- Step function with -inf as argument evaluates to 0
	> Test 6:
		- Mine: Step(inf) ==> 1
		- Actual: Step(inf) ==> 1
		- Step function with inf as argument evaluates to 1
ReLU Function Tests:
	> Test 0:
		- Mine: ReLU(0) ==> 0
		- Actual: ReLU(0) ==> 0
		- ReLU function with 0 as argument evaluates to 0
	> Test 1:
		- Mine: ReLU(-0.4) ==> 0
		- Actual: ReLU(-0.4) ==> 0
		- ReLU function with -0.4 as argument evaluates to 0
	> Test 2:
		- Mine: ReLU(-16) ==> 0
		- Actual: ReLU(-16) ==> 0
		- ReLU function with -16 as argument evaluates to 0
	> Test 3:
		- Mine: ReLU(0.7) ==> 0.7
		- Actual: ReLU(0.7) ==> 0.7
		- ReLU function with 0.7 as argument evaluates to 0.7
	> Test 4:
		- Mine: ReLU(22) ==> 22
		- Actual: ReLU(22) ==> 22
		- ReLU function with 22 as argument evaluates to 22
	> Test 5:
		- Mine: ReLU(-inf) ==> 0
		- Actual: ReLU(-inf) ==> 0
		- ReLU function with -inf as argument evaluates to 0
	> Test 6:
		- Mine: ReLU(inf) ==> inf
		- Actual: ReLU(inf) ==> inf
		- ReLU function with inf as argument evaluates to inf
LeakyReLU Function Tests:
	> Test 0:
		- Mine: LeakyReLU(0) ==> 0
		- Actual: LeakyReLU(0) ==> 0
		- LeakyReLU function with 0 as argument evaluates to 0
	> Test 1:
		- Mine: LeakyReLU(-0.4) ==> -0.004
		- Actual: LeakyReLU(-0.4) ==> -0.004
		- LeakyReLU function with -0.4 as argument evaluates to -0.004
	> Test 2:
		- Mine: LeakyReLU(-16) ==> -0.16
		- Actual: LeakyReLU(-16) ==> -0.16
		- LeakyReLU function with -16 as argument evaluates to -0.16
	> Test 3:
		- Mine: LeakyReLU(0.7) ==> 0.7
		- Actual: LeakyReLU(0.7) ==> 0.7
		- LeakyReLU function with 0.7 as argument evaluates to 0.7
	> Test 4:
		- Mine: LeakyReLU(22) ==> 22
		- Actual: LeakyReLU(22) ==> 22
		- LeakyReLU function with 22 as argument evaluates to 22
	> Test 5:
		- Mine: LeakyReLU(-inf) ==> -inf
		- Actual: LeakyReLU(-inf) ==> -inf
		- LeakyReLU function with -inf as argument evaluates to -inf
	> Test 6:
		- Mine: LeakyReLU(inf) ==> inf
		- Actual: LeakyReLU(inf) ==> inf
		- LeakyReLU function with inf as argument evaluates to inf
SoftPlus Function Tests:
	> Test 0:
		- Mine: SoftPlus(0) ==> 0.69315
		- Actual: SoftPlus(0) ==> 0.69315
		- SoftPlus function with 0 as argument evaluates to 0.69315
	> Test 1:
		- Mine: SoftPlus(-0.4) ==> 0.51302
		- Actual: SoftPlus(-0.4) ==> 0.51302
		- SoftPlus function with -0.4 as argument evaluates to 0.51302
	> Test 2:
		- Mine: SoftPlus(-16) ==> 0
		- Actual: SoftPlus(-16) ==> 0
		- SoftPlus function with -16 as argument evaluates to 0
	> Test 3:
		- Mine: SoftPlus(0.7) ==> 1.10319
		- Actual: SoftPlus(0.7) ==> 1.10319
		- SoftPlus function with 0.7 as argument evaluates to 1.10319
	> Test 4:
		- Mine: SoftPlus(22) ==> 22
		- Actual: SoftPlus(22) ==> 22
		- SoftPlus function with 22 as argument evaluates to 22
	> Test 5:
		- Mine: SoftPlus(-inf) ==> 0
		- Actual: SoftPlus(-inf) ==> 0
		- SoftPlus function with -inf as argument evaluates to 0
	> Test 6:
		- Mine: SoftPlus(inf) ==> inf
		- Actual: SoftPlus(inf) ==> inf
		- SoftPlus function with inf as argument evaluates to inf
